generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coffee {
  id          String      @id @default(uuid())
  name        String
  description String
  price       Decimal     @db.Decimal(10, 2)
  image_url   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  tags        CoffeeTag[]
  cartItems   CartItem[]
}

model Tag {
  id        String      @id @default(uuid())
  name      String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  coffees   CoffeeTag[]
}

model CoffeeTag {
  coffee    Coffee  @relation(fields: [coffeeId], references: [id])
  coffeeId  String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String

  @@id([coffeeId, tagId])
}

model Cart {
  id                String     @id @default(uuid())
  status            String
  status_payment    String
  data_time_completed DateTime?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  items             CartItem[]
  orders           Order[]
}

model CartItem {
  id         String   @id @default(uuid())
  cart       Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId     String
  coffee     Coffee   @relation(fields: [coffeeId], references: [id])
  coffeeId   String
  quantity   Int
  unit_price Decimal  @db.Decimal(10, 2)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([cartId, coffeeId])
}

model Order {
  id            String   @id @default(uuid())
  cart          Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId        String
  totalItems    Decimal  @db.Decimal(10, 2)
  shippingFee   Decimal  @db.Decimal(10, 2)
  totalAmount   Decimal  @db.Decimal(10, 2)
  status        String   @default("Pendente")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}